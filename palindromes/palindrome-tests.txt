---
Names: Ricky Pan, Daniel Zhang
NOTE: >
    Lines in this file marked "Input: " are exempt from CS 70's 80-column
    maximum-line-length rule.
Format: >
    The idea is that we show input, expected output, and the rationale
    for the test.
Bonus: >
    Although you don't need to preserve the formatting, this file is
    actually in a structured data format that could allow a program to
    read these  tests in and do something with them, such as run the tests
    automatically, rather than by hand.  This structured format is known
    as YAML and documented at http://yaml.org.  There are libraries to
    read YAML into all your favorite languages, so you could actually write
    your own python-based tester. Prof. O'Neill wrote one in Perl.  We're
    not expecting you to do that though.
---
- Input:  civic
  Output: Yay, that's a palindrome!
  Notes:  This is a simple palindrome

- Input:  banana
  Output: No, that's not a palindrome.
  Notes:  This is a simple non palindrome

- Input:  sit on a potato pan, otis
  Output: Yay, that's a palindrome!
  Notes:  This example includes spaces and punctuation.

- Input: 1001
  Output: Yay, that's a palindrome!
  Notes: This tests for numbers as characters.

- Input: Gert, I saw Ron avoid a radio van--or was it Reg?
  Output: Yay, that's a palindrome!
  Notes: This example tests capital letters, spaces, and punctuation.

- Input: 1A 2"3 c% - %c 3"2 A1
  Output: Yay, that's a palindrome!
  Notes: Tests a combination of letters, numerals, spaces, and special characters.
